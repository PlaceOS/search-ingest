version: "3.7"

# YAML Anchors

x-deployment-env: &deployment-env
  ENV: ${ENV:-development}
  SG_ENV: ${SG_ENV:-development}
  TZ: $TZ
  PG_DATABASE_URL: ${PG_DATABASE_URL:-postgresql://postgres:password@localhost:5432/ingest_spec}

x-elastic-client-env: &elastic-client-env
  ELASTIC_HOST: ${ELASTIC_HOST:-elastic}
  ELASTIC_PORT: ${ELASTIC_PORT:-9200}

x-search-ingest-client-env: &search-ingest-client-env
  PLACE_SEARCH_INGEST_URI: ${PLACE_SEARCH_INGEST_URI:-http://search-ingest:3000}

services:
  test:
    image: placeos/service-spec-runner:${CRYSTAL_VERSION:-latest}
    volumes:
      - ${PWD}/spec:/app/spec
      - ${PWD}/src:/app/src
      - ${PWD}/lib:/app/lib
      - ${PWD}/shard.lock:/app/shard.lock
      - ${PWD}/shard.override.yml:/app/shard.override.yml
      - ${PWD}/shard.yml:/app/shard.yml.input
      - ${PWD}/coverage:/app/coverage
    depends_on:
      - elastic
      - postgres
    environment:
      # Service Hosts
      <<: *elastic-client-env
      # Environment
      GITHUB_ACTION: ${GITHUB_ACTION:-}
      <<: *deployment-env

  elastic:
    image: elasticsearch:${ELASTIC_VERSION:-7.17.6}
    restart: always
    environment:
      discovery.type: single-node

  postgres:
    image: postgres:13-alpine
    container_name: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 3
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ingest_spec
    ports:
       - "5432:5432"
